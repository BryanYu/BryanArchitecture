<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off"
      internalLogFile="c:\temp\nlog-internal.log">

  <!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
  <variable name="FileNameLayout" value="${basedir}/Logs/${level:uppercase=true}.log" />
  <variable name="ArchiveFileNameLayout" value="${basedir}/Archives/${level:uppercase=true}/${level:uppercase=true}.{#}.log" />
  <variable name="ContentLayout" value=
"=================================================================
${newline}
DateTime: ${longdate} ${newline} ${newline}
Level: ${level:uppercase=true} ${newline} ${newline}
Message: ${message} ${newline} ${newline}
ExceptionType: ${exception:format=Type} ${newline} ${newline}
ExceptionMessage: ${exception:format=Message} ${newline} ${newline}
Method: ${exception:format=Method} ${newline} ${newline}
StackTrace: ${exception:format=StackTrace} ${newline} ${newline}
Data: ${exception:format=Data} ${newline} ${newline}
==================================================================
${newline} " />

  <!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->
  <targets>

    <!--
    add your targets here
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->

    <!--
    Write events to a file with the date in the filename.
    <target xsi:type="File" name="f" fileName="${basedir}/logs/${shortdate}.log"
            layout="${longdate} ${uppercase:${level}} ${message}" />
    -->
    <target xsi:type="File" name="File"
            fileName="${FileNameLayout}"
            encoding="UTF-8"
            maxArchiveFiles="7"
            archiveFileName="${ArchiveFileNameLayout}"
            archiveNumbering="Date"
            archiveDateFormat="yyyy-MM-dd"
            archiveEvery="Day"
            ConcurrentWrites="true"
            keepFileOpen="false"
            layout="${ContentLayout}" />

    <target xsi:type="Database"
            name="DataBase"
            dbProvider="System.Data.SqlClient"
            connectionString="data source=(LocalDB)\MSSQLLocalDB;attachdbfilename=C:\GitHub\BryanArchitecture\DataBase\Log.mdf;integrated security=True;connect timeout=30;MultipleActiveResultSets=True;">

      <commandText>
        INSERT INTO dbo.Log (
        Application, Logged, Level, Message,
        Username, ServerName, Port, Url, Https,
        ServerAddress, RemoteAddress,Logger,
        CallSite, Exception)
        values ( @Application, @Logged, @Level, @Message,
        @Username, @ServerName, @Port, @Url, @Https,
        @ServerAddress, @RemoteAddress,
        @Logger, @Callsite, @Exception);
      </commandText>
      <parameter name="@application" layout="${appsetting:name=AppName:default=Unknown\: set AppName in appSettings}" />
      <parameter name="@logged" layout="${date}" />
      <parameter name="@level" layout="${level}" />
      <parameter name="@message" layout="${message}" />
      <parameter name="@username" layout="${identity}" />
      <parameter name="@serverName" layout="${aspnet-request:serverVariable=SERVER_NAME}" />
      <parameter name="@port" layout="${aspnet-request:serverVariable=SERVER_PORT}" />
      <parameter name="@url" layout="${aspnet-request:serverVariable=HTTP_URL}" />
      <parameter name="@https" layout="${when:inner=1:when='${aspnet-request:serverVariable=HTTPS}' == 'on'}${when:inner=0:when='${aspnet-request:serverVariable=HTTPS}' != 'on'}" />
      <parameter name="@serverAddress" layout="${aspnet-request:serverVariable=LOCAL_ADDR}" />
      <parameter name="@remoteAddress" layout="${aspnet-request:serverVariable=REMOTE_ADDR}:${aspnet-request:serverVariable=REMOTE_PORT}" />
      <parameter name="@logger" layout="${logger}" />
      <parameter name="@callSite" layout="${callsite}" />
      <parameter name="@exception" layout="${exception:tostring}" />
    </target>
  </targets>

  <rules>

    <!-- add your logging rules here -->

    <!--
    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"
    <logger name="*" minlevel="Debug" writeTo="f" />
    -->
    <logger name="*" minlevel="Trace" writeTo="File" />
    <logger name="*" minLevel="Warn"  writeTo="DataBase" />
  </rules>
</nlog>